services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: ${KAFKA_DEFAULT_HOST}
    hostname: ${KAFKA_DEFAULT_HOST}
    ports:
      - '9092:9092'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - backend

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ${KAFKA_UI_HOST}
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    ports:
      - "${KAFKA_UI_PORT}:8080"
    depends_on:
      - kafka
    networks:
      - backend

  #  mysql:
  #    image: mysql:9.1.0
  #    container_name: ${MYSQL_HOST}
  #    environment:
  #      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
  #      MYSQL_DATABASE: ${MYSQL_DATABASE}
  #    ports:
  #      - '${MYSQL_PORT}:3306'
  #    volumes:
  #      - mysql_data:/var/lib/mysql
  #    networks:
  #      - backend

  rabbitmq:
    image: 'rabbitmq:4.0.5'
    container_name: ${RABBITMQ_DEFAULT_HOST}
    ports:
      - '${RABBITMQ_DEFAULT_PORT}:5672'
      - '${RABBITMQ_DEFAULT_PORT_MANAGEMENT}:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - backend
  zipkin:
    image: ghcr.io/openzipkin/zipkin-slim:${TAG:-latest}
    container_name: zipkin
    # Environment settings are defined here https://github.com/openzipkin/zipkin/blob/master/zipkin-server/README.md#environment-variables
    environment:
      - STORAGE_TYPE=mem
      # Uncomment to enable self-tracing
      # - SELF_TRACING_ENABLED=true
      # Uncomment to increase heap size
      # - JAVA_OPTS=-Xms128m -Xmx128m -XX:+ExitOnOutOfMemoryError
    ports:
      # Port used for the Zipkin UI and HTTP Api
      - 9411:9411
    # Uncomment to enable debug logging
    # command: --logging.level.zipkin2=DEBUG
    networks:
      - backend

  redis:
    image: docker.io/bitnami/redis:7.4
    restart: always
    container_name: redis
    ports:
      - '${REDIS_PORT}:6379'
    volumes:
      - redis_data:/data
    networks:
      - backend
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
      - REDIS_PORT_NUMBER=6379
      - REDIS_BIND=0.0.0.0


  identity-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-identity-service:identity-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${IDENTITY_SERVICE_HOST}
    ports:
      - '${IDENTITY_SERVICE_PORT}:8082'
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - IDENTITY_SERVICE_PORT=${IDENTITY_SERVICE_PORT}
      - EUREKA_CLIENT_SERVICE_URL= ${EUREKA_CLIENT_SERVICE_URL}
      - RABBITMQ_DEFAULT_HOST=${RABBITMQ_DEFAULT_HOST}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
      - SPRING_SECURITY_JWT_EXPIRATION=${SPRING_SECURITY_JWT_EXPIRATION}
      - SPRING_SECURITY_ACTIVE=${SPRING_SECURITY_ACTIVE}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
      - GOOGLE_TEST=1234
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - backend

  cart-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-cart-service:cart-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${CART_SERVICE_HOST}
    ports:
      - '${CART_SERVICE_PORT}:8084'
    environment:
      - EUREKA_CLIENT_SERVICE_URL= ${EUREKA_CLIENT_SERVICE_URL}
      - CART_SERVICE_PORT=${CART_SERVICE_PORT}
      - MONGO_URL=${MONGO_URL}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
    networks:
      - backend

  product-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-product-service:product-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${PRODUCT_SERVICE_HOST}
    ports:
      - '${PRODUCT_SERVICE_PORT}:8083'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - RABBITMQ_DEFAULT_HOST=${RABBITMQ_DEFAULT_HOST}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
      - KAFKA_GROUP_ID=${KAFKA_PRODUCT_GROUP_ID}
      - PRODUCT_MONGO_DB_NAME=${PRODUCT_MONGO_DB_NAME}
      - MONGO_URL=${MONGO_URL}
      - PRODUCT_SERVICE_PORT=${PRODUCT_SERVICE_PORT}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
    depends_on:
      - kafka
      - service-registry
    networks:
      - backend

  order-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-order-service:order-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${ORDER_SERVICE_HOST}
    ports:
      - '${ORDER_SERVICE_PORT}:8085'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - ORDER_SERVICE_PORT=${ORDER_SERVICE_PORT}
      - MONGO_URL=${MONGO_URL}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
    networks:
      - backend

  payment-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-payment-service:payment-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${PAYMENT_SERVICE_HOST}
    ports:
      - '${PAYMENT_SERVICE_PORT}:8086'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - PAYMENT_SERVICE_PORT=${PAYMENT_SERVICE_PORT}
      - MONGO_URL=${MONGO_URL}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
      - VN_PAY_URL=${VN_PAY_URL}
      - VN_PAY_TMN_CODE=${VN_PAY_TMN_CODE}
      - VN_PAY_HASH_SECRET=${VN_PAY_HASH_SECRET}
      - VN_PAY_RETURN_URL=${VN_PAY_RETURN_URL}
      - VN_PAY_VERSION=${VN_PAY_VERSION}
      - VN_PAY_COMMAND=${VN_PAY_COMMAND}
      - VN_PAY_ORDER_TYPE=${VN_PAY_ORDER_TYPE}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
    networks:
      - backend

  notification-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-notification-service:notification-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${NOTIFICATION_SERVICE_HOST}
    ports:
      - '${NOTIFICATION_SERVICE_PORT}:8087'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - NOTIFICATION_SERVICE_PORT=${NOTIFICATION_SERVICE_PORT}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
    networks:
      - backend

  chat-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-chat-service:chat-service-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${CHAT_SERVICE_HOST}
    ports:
      - '${CHAT_SERVICE_PORT}:8088'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - CHAT_SERVICE_PORT=${CHAT_SERVICE_PORT}
      - RABBITMQ_DEFAULT_HOST=${RABBITMQ_DEFAULT_HOST}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - SPRING_SECURITY_JWT_SECRET=${SPRING_SECURITY_JWT_SECRET}
      - CHAT_SERVICE_PORT=${CHAT_SERVICE_PORT}
      - KAFKA_DEFAULT_HOST=${KAFKA_DEFAULT_HOST}
      - GEMINI_API_URL=${GEMINI_API_URL}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    networks:
      - backend

  config-server:
    image: 'ashleynguci1072003/01-ecommerce-backend-config-server:config-server-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${CONFIG_SERVER_HOST}
    ports:
      - '${CONFIG_SERVER_PORT}:8888'
    environment:
      - CONFIG_SERVER_PORT=${CONFIG_SERVER_PORT}
      - EUREKA_CLIENT_SERVICE_URL=http://service-registry:8761/eureka/
      - CONFIG_SERVER_URI=${CONFIG_SERVER_URI}
    networks:
      - backend

  service-registry:
    image: 'ashleynguci1072003/01-ecommerce-backend-service-registry:service-registry-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${SERVICE_REGISTRY_HOST}
    ports:
      - '${SERVICE_REGISTRY_PORT}:8761'
    environment:
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
    networks:
      - backend

  api-gateway:
    image: 'ashleynguci1072003/01-ecommerce-backend-api-gateway:api-gateway-b4f745beccffa17c11253e831a16aa57aba5ca75'
    container_name: ${API_GATEWAY_HOST}
    ports:
      - '${API_GATEWAY_PORT}:9191'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
      - REDIS_HOST=${REDIS_HOST}
      - REDIS_PORT=${REDIS_PORT}
    networks:
      - backend
    depends_on:
      - service-registry
      - config-server
      - identity-service
      - product-service
      - order-service
      - payment-service
      - notification-service
      - cart-service
      - chat-service

volumes:
  mysql_data:
  redis_data:

networks:
  backend:
    driver: bridge


