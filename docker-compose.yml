version: '3.8'
services:
  kafka:
    image: 'bitnami/kafka:3.7.0'
    container_name: ${KAFKA_DEFAULT_HOST}
    hostname: ${KAFKA_DEFAULT_HOST}
    ports:
      - '${KAFKA_DEFAULT_PORT}:9094'
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - backend

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: ${KAFKA_UI_HOST}
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: ${KAFKA_DEFAULT_HOST}:9094
    ports:
      - "${KAFKA_UI_PORT}:8080"
    depends_on:
      - kafka
    networks:
      - backend

  mysql:
    image: mysql:9.1.0
    container_name: ${MYSQL_HOST}
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
    ports:
      - '${MYSQL_PORT}:3306'
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  rabbitmq:
    image: 'rabbitmq:4.0.5'
    container_name: ${RABBITMQ_DEFAULT_HOST}
    ports:
      - '${RABBITMQ_DEFAULT_PORT}:5672'
      - '${RABBITMQ_DEFAULT_PORT_MANAGEMENT}:15672'
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    networks:
      - backend

  identity-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-identity-service:identity-service-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: ${IDENTITY_SERVICE_HOST}
    ports:
      - '${IDENTITY_SERVICE_PORT}:8082'
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - IDENTITY_SERVICE_PORT= ${IDENTITY_SERVICE_PORT}
      - EUREKA_CLIENT_SERVICE_URL= ${EUREKA_CLIENT_SERVICE_URL}
      - RABBITMQ_DEFAULT_HOST=${RABBITMQ_DEFAULT_HOST}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    depends_on:
      - mysql
    networks:
      - backend

  cart-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-cart-service:cart-service-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: cart-service
    ports:
      - '8084:8084'
    networks:
      - backend

  product-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-product-service:product-service-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: ${PRODUCT_SERVICE_HOST}
    ports:
      - '${PRODUCT_SERVICE_PORT}:8083'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - RABBITMQ_DEFAULT_HOST=${RABBITMQ_DEFAULT_HOST}
      - RABBITMQ_DEFAULT_PORT=${RABBITMQ_DEFAULT_PORT}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
      - KAFKA_BOOTSTRAP_SERVERS=${KAFKA_DEFAULT_HOST}
      - KAFKA_GROUP_ID=${KAFKA_PRODUCT_GROUP_ID}
      - PRODUCT_MONGO_DB_NAME=${PRODUCT_MONGO_DB_NAME}
      - MONGO_URL=${MONGO_URL}
    depends_on:
      - kafka
      - service-registry
    networks:
      - backend

  order-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-order-service:order-service-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: order-service
    ports:
      - '8085:8085'
    networks:
      - backend

  payment-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-payment-service:payment-service-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: payment-service
    ports:
      - '8086:8086'
    networks:
      - backend

  notification-service:
    image: 'ashleynguci1072003/01-ecommerce-backend-notification-service:notification-service-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: notification-service
    ports:
      - '8087:8087'
    networks:
      - backend

  config-server:
    image: 'ashleynguci1072003/01-ecommerce-backend-config-server:config-server-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: config-server
    ports:
      - '8888:8888'
    networks:
      - backend

  service-registry:
    image: 'ashleynguci1072003/01-ecommerce-backend-service-registry:service-registry-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: ${SERVICE_REGISTRY_HOST}
    ports:
      - '${SERVICE_REGISTRY_PORT}:8761'
    environment:
      - SERVICE_REGISTRY_PORT=${SERVICE_REGISTRY_PORT}
    networks:
      - backend

  api-gateway:
    image: 'ashleynguci1072003/01-ecommerce-backend-api-gateway:api-gateway-ebe5385ad12bdaa4b67bd7120b2ba6c39ea3da0b'
    container_name: ${API_GATEWAY_HOST}
    ports:
      - '${API_GATEWAY_PORT}:9191'
    environment:
      - EUREKA_CLIENT_SERVICE_URL=${EUREKA_CLIENT_SERVICE_URL}
      - API_GATEWAY_PORT=${API_GATEWAY_PORT}
    networks:
      - backend
    depends_on:
      - service-registry
      - config-server
      - identity-service
      - product-service
      - order-service
      - payment-service
      - notification-service
      - cart-service

volumes:
  mysql_data:

networks:
  backend:
    driver: bridge


