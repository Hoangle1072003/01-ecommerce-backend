spring:
  application:
    name: PRODUCT-SERVICE
  servlet:
    multipart:
      enabled: true
      max-file-size: 10MB
      max-request-size: 10MB
  rabbitmq:
    host: ${RABBITMQ_DEFAULT_HOST}
    port: ${RABBITMQ_DEFAULT_PORT}
    username: ${RABBITMQ_DEFAULT_USER}
    password: ${RABBITMQ_DEFAULT_PASS}
  boot:
    message: Hello , Product Service

  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
    consumer:
      group-id: ${KAFKA_GROUP_ID}
      auto-offset-reset: earliest
      enable-auto-commit: true
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring.json.trusted.packages: '*'
  data:
    mongodb:
      uri: ${MONGO_URL}
      database: ${PRODUCT_MONGO_DB_NAME}
  security:
    authentication:
      jwt:
        # openssl rand -base64 64
        base64-secret: ZnrZWEcOiEHMQjUnLbs3eAvprDpEvX9sEl/6XqfiRMi6WGfXH5c+aObAPgfn6xcMe7l9G8oQz4y2o/g8gS1Rqw==
eureka:
  client:
    service-url:
      defaultZone: ${EUREKA_CLIENT_SERVICE_URL}
management:
  endpoints:
    web:
      exposure:
        include: "*"
server:
  port: ${PRODUCT_SERVICE_PORT}


# password nosql: 8OWQ2rzxntvKxflL
